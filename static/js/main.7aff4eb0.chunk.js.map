{"version":3,"sources":["reducers/historyReducer.js","components/Header.js","components/MyLink.js","components/MyCard.js","reducers/subjectReducer.js","pages/Home.js","components/Links.js","pages/Exam.js","reducers/shortAnswerReducer.js","components/ShortAnswer.js","utils/deleteArrayElement.js","reducers/singleChoiceReducer.js","components/SingleChoice.js","pages/Quest.js","utils/detectEmpty.js","utils/hooks/useMySnackbar.js","utils/removeDumplicatedItem.js","pages/admin/SCQuests.js","pages/admin/SAQuests.js","pages/admin/Score.js","pages/admin/AdminHome.js","reducers/linksReducer.js","reducers/themeReducer.js","reducers/titleReducer.js","controllers/reducerCombiner.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["initialState","historyReducer","state","action","type","includes","data","concat","History","histories","useSelector","history","dispatch","useDispatch","Breadcrumbs","separator","fontSize","style","color","marginLeft","Typography","map","to","textDecoration","variant","length","IconButton","onClick","value","Header","title","position","height","AppBar","Toolbar","width","paddingLeft","MyLink","prop","children","MyCard","useState","over","setOver","Card","onMouseOver","onMouseOut","raised","setSubject","subject","subjectReducer","Home","Container","Grow","in","Grid","container","spacing","item","lg","xs","CardActionArea","CardContent","textAlign","Links","links","link","arynum","transformOrigin","timeout","key","url","md","sm","gutterBottom","text","description","Exam","maxWidth","stem","img","answerSAQuestion","objnum","answer","shortAnswerReducer","answerToChange","changedAnswer","quest","questnum","newQuest","ShortAnswer","CardMedia","image","Divider","TextField","autoComplete","onChange","event","target","multiline","rows","rowsMax","paddingTop","InputProps","startAdornment","InputAdornment","ShortAnswers","quests","shortanswers","deleteArrayElement","ary","itemnum","slice","deleteArrayElements","aryToChange","indexAry","changingAry","index","element","choice","correct","answerSCQuestion","singleChoiceReducer","changedQuests","SingleChoice","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","label","uuidv4","SingleChoices","singlechoices","Quest","useParams","detectEmpty","total","forEach","num","push","useMySnackbar","enqueueSnackbar","useSnackbar","inherit","msg","success","err","warn","info","removeDuplicatedItem","Array","from","Set","AddSCQ","setStem","stemErr","setStemErr","choices","setChoices","setCorrect","correctErr","setCorrectErr","setImg","snackbar","required","error","InputLabel","htmlFor","Select","native","labelId","inputProps","id","Button","newChoices","addSCQuestion","marginTop","marginBottom","SCChoices","handleChoiceDelete","changedChoices","deleteChoices","OutlinedInput","changedChoice","cgdchs","arynumb","changeChoices","labelWidth","endAdornment","SCQuests","selectionModel","setSelectionModel","join","autoHeight","columns","field","headerName","pageSize","checkboxSelection","onSelectionModelChange","newSelection","select","Number","toString","AddSAQ","addSAQuestion","SAQuests","SCscore","SAscore","Score","AdminHomeLinks","verticalAlign","align","AdminHome","route","linksReducer","createMuiTheme","mycolor","themeReducer","titleReducer","reducer","combineReducers","theme","store","createStore","composeWithDevTools","Main","notistackRef","React","createRef","onClickDismiss","current","closeSnackbar","ThemeProvider","maxSnack","preventDuplicate","ref","path","App","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","hasChildNodes","ReactDOM","hydrate","render","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"67BAAMA,EAAe,GA8BNC,EA5BQ,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACvD,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAOF,EAAMG,SAASF,EAAOG,MAAQJ,EAAQA,EAAMK,OAAOJ,EAAOG,MAEnE,IAAK,eACH,MAAO,GAET,QACE,OAAOJ,I,OC0BPM,EAAU,WACd,IAAMC,EAAYC,aAAY,SAACR,GAAD,OAAWA,EAAMS,WACzCC,EAAWC,cACjB,OACE,qCACE,eAACC,EAAA,EAAD,CACEC,UAAW,cAAC,IAAD,CAAkBC,SAAS,UACtCC,MAAO,CAAEC,MAAO,QAAQC,YAAa,IAFvC,UAIE,cAACC,EAAA,EAAD,IACCX,EAAUY,KAAI,SAACV,GACd,OACE,cAAC,IAAD,CAAMW,GAAIX,EAASM,MAAO,CAAEM,eAAgB,QAA5C,SACE,cAACH,EAAA,EAAD,CAAYH,MAAO,CAAEC,MAAO,SAAWM,QAAQ,UAA/C,SACGb,KAFsDA,SAQ3C,IAArBF,EAAUgB,QACT,cAACC,EAAA,EAAD,CACEF,QAAQ,QACRG,QAAS,WDrCS,IAACC,ECsCjBhB,EDrCH,CACLR,KAAM,eACNE,KAAMsB,KCgCF,SAME,cAAC,IAAD,CAAYX,MAAO,CAAEC,MAAO,iBAMvBW,EAvDA,WACb,IAAMC,EAAQpB,aAAY,SAACR,GAAD,OAAWA,EAAM4B,SAE3C,OACE,qCACE,gCAAQA,IACR,qBAAKC,SAAS,SAASd,MAAO,CAAEe,OAAQ,MACxC,cAACC,EAAA,EAAD,CAAQF,SAAS,QAAjB,SACE,eAACG,EAAA,EAAD,CAASjB,MAAO,CAAEkB,MAAO,OAAQC,YAAa,GAA9C,mBACQ,cAAChB,EAAA,EAAD,CAAYI,QAAQ,KAApB,SAA0BM,IADlC,SAEE,cAAC,IAAD,CAAMR,GAAG,IAAT,SACE,cAACI,EAAA,EAAD,UACE,cAAC,IAAD,CAAUT,MAAO,CAAEC,MAAO,eAG9B,cAAC,EAAD,aCLKmB,EApBA,SAACC,GACd,IAAM1B,EAAWC,cAIjB,OACE,8BACE,cAAC,IAAD,CACES,GAAIgB,EAAKhB,GACTL,MAAO,CAAEM,eAAgB,QACzBI,QAAS,WARK,IAACL,IASDgB,EAAKhB,GARvBV,EFSK,CACLR,KAAM,gBACNE,KEXuBgB,KAIrB,SAOGgB,EAAKC,c,gBCECC,EAlBA,SAACF,GAAU,IAAD,EACCG,oBAAS,GADV,mBAChBC,EADgB,KACVC,EADU,KAEvB,OACE,cAACC,EAAA,EAAD,CACE3B,MAAO,CAAEkB,MAAO,OAAQH,OAAQ,QAChCa,YAAa,WACXF,GAAQ,IAEVG,WAAY,WACVH,GAAQ,IAEVI,OAAQL,EARV,SAUGJ,EAAKC,YCNCS,EAAa,SAACC,GACzB,MAAO,CAAE7C,KAAM,aAAcE,KAAM2C,IAGtBC,EAdQ,WAAyB,IAAxBhD,EAAuB,uDAAf,GAAIC,EAAW,uCAC7C,OAAQA,EAAOC,MACb,IAAK,aACH,OAAOD,EAAOG,KAChB,QACE,OAAOJ,IC8CEiD,EApCF,WAGX,OAFiBtC,aACjBD,CAASoC,EAAW,KAElB,eAACI,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAMC,IAAI,EAAV,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACE,cAAC,EAAD,CAAQtC,GAAG,QAAQL,MAAO,CAAEM,eAAgB,QAA5C,SACE,cAAC,EAAD,UACE,cAACsC,EAAA,EAAD,CAAgB5C,MAAO,CAAEkB,MAAO,OAAQH,OAAQ,QAAhD,SACE,cAAC8B,EAAA,EAAD,CAAa7C,MAAO,CAAE8C,UAAW,UAAjC,SACE,cAAC3C,EAAA,EAAD,CAAYI,QAAQ,KAApB,sDAMV,cAAC+B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACE,cAAC,EAAD,CAAQtC,GAAG,SAASL,MAAO,CAAEM,eAAgB,QAA7C,SACE,cAAC,EAAD,UACE,cAACsC,EAAA,EAAD,CAAgB5C,MAAO,CAAEkB,MAAO,OAAQH,OAAQ,QAAhD,SACE,cAAC8B,EAAA,EAAD,CAAa7C,MAAO,CAAE8C,UAAW,UAAjC,SACE,cAAC3C,EAAA,EAAD,CAAYI,QAAQ,KAApB,+DCYLwC,EAvCD,WACZ,IAAMC,EAAQvD,aAAY,SAACR,GAAD,OAAWA,EAAM+D,SAC3C,OACE,cAACV,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGQ,EAAM5C,KAAI,SAAC6C,EAAMC,GAChB,OACE,wBAACd,EAAA,EAAD,CACEC,IAAI,EACJrC,MAAO,CAAEmD,gBAAiB,SACpBC,QAAS,IAAMF,EACrBG,IAAKJ,EAAKK,KAEV,cAAChB,EAAA,EAAD,CAAMG,MAAI,EAAgBC,GAAI,EAAGa,GAAI,EAAGC,GAAI,GAAIb,GAAI,GAApD,SACE,cAAC,EAAD,CAAQtC,GAAE,eAAU4C,EAAKK,KAAOtD,MAAO,CAAEM,eAAgB,QAAzD,SACE,cAAC,EAAD,UACE,cAACsC,EAAA,EAAD,CAAgB5C,MAAO,CAAEkB,MAAO,OAAQH,OAAQ,QAAhD,SACE,cAAC8B,EAAA,EAAD,UACE,qBAAI7C,MAAO,CAAEC,MAAOgD,EAAKhD,MAAOC,WAAY,IAA5C,UACE,cAACC,EAAA,EAAD,CAAYsD,cAAY,EAAxB,SAA0BR,EAAKS,OAC/B,+BACE,cAACvD,EAAA,EAAD,CACEI,QAAQ,QACRP,MAAO,CAAEC,MAAO,WAFlB,SAIGgD,EAAKU,4BAZNV,EAAKK,YCElBM,EAdF,WACX,OACE,qCACE,cAAC,EAAD,IACA,eAACzB,EAAA,EAAD,CAAWnC,MAAO,CAAE6D,SAAU,QAA9B,UACE,cAAC1D,EAAA,EAAD,CAAYsD,cAAY,EAAClD,QAAQ,KAAjC,sCAGA,cAAC,EAAD,W,4CCpBFxB,EAAe,CACnB,CACE+E,KAAM,qEACNC,IACE,2EAEJ,CAAED,KAAM,yFA0BGE,EAAmB,SAACC,EAAQtD,GACvC,MAAO,CACLxB,KAAM,WACNE,KAAM,CAAE4E,OAAQA,EAAQC,OAAQvD,KAWrBwD,EArCY,WAAmC,IAAlClF,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC3D,OAAQA,EAAOC,MACb,IAAK,WACH,IAAM8E,EAAS/E,EAAOG,KAAK4E,OACrBG,EAAiBnF,EAAMgF,GACvBI,EAAa,2BAAQD,GAAR,IAAwBF,OAAQhF,EAAOG,KAAK6E,SAC/D,OAAOjF,EAAMmB,KAAI,SAACkE,EAAOC,GAAR,OACfA,IAAaN,EAASI,EAAgBC,KAG1C,IAAK,QACH,IAAME,EAAW,CACfV,KAAM5E,EAAOG,KAAKyE,KAClBC,IAAK7E,EAAOG,KAAK0E,KAEnB,OAAO9E,EAAMK,OAAOkF,GAEtB,QACE,OAAOvF,ICXPwF,EAAc,SAACpD,GACnB,IAAM1B,EAAWC,cAIjB,OACE,eAAC,EAAD,WACGyB,EAAKiD,MAAMP,IACV,qCACE,cAACW,EAAA,EAAD,CAAWC,MAAOtD,EAAKiD,MAAMP,IAAK/D,MAAO,CAAEe,OAAQ,OACnD,cAAC6D,EAAA,EAAD,OAEA,KACJ,eAAC/B,EAAA,EAAD,WACE,eAACD,EAAA,EAAD,CACElC,QAAS,WACPf,EAASqE,EAAiB3C,EAAK6B,OAAQ,MAF3C,UAKE,cAAC/C,EAAA,EAAD,CAAYsD,cAAY,EAAxB,SAA0BpC,EAAKiD,MAAMR,OACrC,cAAC3D,EAAA,EAAD,CAAYI,QAAQ,QAAQP,MAAO,CAAEC,MAAO,uBAA5C,6EAIF,cAAC4E,EAAA,EAAD,CACEtE,QAAQ,WACRuE,aAAa,MACbC,SAzBa,SAACC,GACpBrF,EAASqE,EAAiB3C,EAAK6B,OAAQ8B,EAAMC,OAAOtE,SAyB9CuE,WAAS,EACTC,KAAK,IACLC,QAAQ,KACRpF,MAAO,CAAEkB,MAAO,OAAOmE,WAAW,GAClCC,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgB1E,SAAS,QAAzB,oCAiCC2E,EAxBM,SAACpE,GACpB,IAAMqE,EAASjG,aAAY,SAACR,GAAD,OAAWA,EAAM0G,gBAC5C,OACE,qCACE,cAACxF,EAAA,EAAD,CAAYI,QAAQ,KAAKkD,cAAY,EAArC,gCAGA,cAACnB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGkD,EAAOtF,KAAI,SAACkE,EAAOpB,GAAR,OACV,wBAACd,EAAA,EAAD,CACEC,IAAI,EACJrC,MAAO,CAAEmD,gBAAiB,SACpBC,QAAS,IAAOF,EACtBG,IAAKiB,EAAMR,MAEX,cAACxB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAAC,EAAD,CAAa2B,MAAOA,EAAOpB,OAAQA,gB,mECxE3C0C,GAAqB,SAACC,EAAKC,GAK/B,MAJgB,uBACXD,EAAIE,MAAM,EAAGD,IADF,aAEXD,EAAIE,MAAMD,EAAU,EAAGD,EAAIrF,WAQrBwF,GAAsB,SAACC,EAAaC,GAE/C,IADA,IAAIC,EAAcF,EACTG,EAAQ,EAAGA,EAAQF,EAAS1F,OAAQ4F,IAAS,CACpD,IAAMC,EAAUH,EAASE,GACzBD,EAAcP,GAAmBO,EAAaE,EAAUD,GAG1D,OADmBD,GAINP,MCtBT7G,GAAe,CACnB,CACE+E,KAAM,2EACNC,IAAK,GACLuC,OAAQ,CACN,+DACA,+DACA,uFACA,4EAEFC,QAAS,gEAEX,CACEzC,KAAM,uFACNC,IAAK,GACLuC,OAAQ,CAAC,iCAAS,kCAClBC,QAAS,kCAEX,CACEzC,KACE,+SACFC,IAAK,GACLuC,OAAQ,CACN,uFACA,mGACA,+GACA,4EAEFC,QAAS,gHAEX,CACEzC,KACE,iOACFC,IAAK,GACLuC,OAAQ,CAAC,eAAM,eAAM,eAAM,gBAC3BC,QAAS,gBAEX,CACEzC,KAAM,yDACNwC,OAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,QAAS,KAEX,CACEzC,KAAM,iFACNC,IACE,0EACFuC,OAAQ,CAAC,OAAQ,QAAS,QAAS,SACnCC,QAAS,UAiCAC,GAAmB,SAACvC,EAAQtD,GACvC,MAAO,CACLxB,KAAM,WACNE,KAAM,CAAE4E,OAAQA,EAAQC,OAAQvD,KAkBrB8F,GAlDa,WAAmC,IAAlCxH,EAAiC,uDAAzBF,GAAcG,EAAW,uCAC5D,OAAQA,EAAOC,MACb,IAAK,WACH,IAAM8E,EAAS/E,EAAOG,KAAK4E,OACrBG,EAAiBnF,EAAMgF,GACvBI,EAAa,2BAAQD,GAAR,IAAwBF,OAAQhF,EAAOG,KAAK6E,SAC/D,OAAOjF,EAAMmB,KAAI,SAACkE,EAAOC,GAAR,OACfA,IAAaN,EAASI,EAAgBC,KAG1C,IAAK,QACH,IAAME,EAAW,CACfV,KAAM5E,EAAOG,KAAKyE,KAClBC,IAAK7E,EAAOG,KAAK0E,IACjBuC,OAAQpH,EAAOG,KAAKiH,OACpBC,QAASrH,EAAOG,KAAKkH,SAEvB,OAAOtH,EAAMK,OAAOkF,GAEtB,IAAK,QACH,IAAMkC,EAAgBV,GAAoB/G,EAAOC,EAAOG,KAAK6G,UAC7D,OAAOQ,EAET,QACE,OAAOzH,ICzDP0H,GAAe,SAACtF,GACpB,IAAM1B,EAAWC,cAIjB,OACE,eAAC,EAAD,WACGyB,EAAKiD,MAAMP,IACV,qCACE,cAACW,EAAA,EAAD,CAAWC,MAAOtD,EAAKiD,MAAMP,IAAK/D,MAAO,CAAEe,OAAQ,OACnD,cAAC6D,EAAA,EAAD,OAEA,KACJ,eAAC/B,EAAA,EAAD,WACE,eAACD,EAAA,EAAD,CACElC,QAAS,WACPf,EAAS6G,GAAiBnF,EAAK6B,OAAQ,MAF3C,UAKE,cAAC/C,EAAA,EAAD,CAAYsD,cAAY,EAAxB,SAA0BpC,EAAKiD,MAAMR,OACrC,cAAC3D,EAAA,EAAD,CAAYI,QAAQ,QAAQP,MAAO,CAAEC,MAAO,uBAA5C,mFAIF,eAAC2G,EAAA,EAAD,WACE,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CACE/B,SAzBW,SAACC,GACpBrF,EAAS6G,GAAiBnF,EAAK6B,OAAQ8B,EAAMC,OAAOtE,SAyB5CA,MAAOU,EAAKiD,MAAMJ,OAAS7C,EAAKiD,MAAMJ,OAAS,GAFjD,SAIG7C,EAAKiD,MAAMgC,OAAOlG,KAAI,SAACkG,GACtB,OACE,cAACS,GAAA,EAAD,CACEpG,MAAO2F,EACPU,QAAS,cAACC,GAAA,EAAD,IACTC,MAAOZ,GACFa,+BAmCRC,GAxBO,SAAC/F,GACrB,IAAMqE,EAASjG,aAAY,SAACR,GAAD,OAAWA,EAAMoI,iBAC5C,OACE,qCACE,cAAClH,EAAA,EAAD,CAAYI,QAAQ,KAAKkD,cAAY,EAArC,gCAGA,cAACnB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGkD,EAAOtF,KAAI,SAACkE,EAAOpB,GAAR,OACV,wBAACd,EAAA,EAAD,CACEC,IAAI,EACJrC,MAAO,CAAEmD,gBAAiB,SACpBC,QAAS,IAAMF,EACrBG,IAAKiB,EAAMR,MAEX,cAACxB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAAC,GAAD,CAAc2B,MAAOA,EAAOpB,OAAQA,gBC/DnCoE,GAXD,WAGZ,OAFiB1H,aACjBD,CAASoC,EAAWwF,cAAYvF,UAE9B,eAACG,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,Q,iFCNSqF,GATK,SAAC3B,GACnB,IAAI4B,EAAQ,GAMZ,OALA5B,EAAI6B,SAAQ,SAACjF,EAAMkF,GACZlF,GACHgF,EAAMG,KAAKD,MAGRF,GCmCMI,GAvCO,WAAO,IACnBC,EAAoBC,cAApBD,gBAoCR,MAAO,CAAEE,QAjCO,SAACC,GACfH,EAAgBG,EAAK,CACnB1H,QAAS,aA+BK2H,QA1BF,SAACD,GACfH,EAAgBG,EAAK,CACnB1H,QAAS,aAwBc4H,IAnBf,SAACF,GACXH,EAAgBG,EAAK,CACnB1H,QAAS,WAiBmB6H,KAZnB,SAACH,GACZH,EAAgBG,EAAK,CACnB1H,QAAS,aAUyB8H,KALzB,SAACJ,GACZH,EAAgBG,EAAK,CACnB1H,QAAS,YCjCA+H,GAJc,SAACzC,GAE5B,OADmB0C,MAAMC,KAAK,IAAIC,IAAI5C,KC2FlC6C,GAAS,WAAO,IAAD,EACKlH,mBAAS,IADd,mBACZsC,EADY,KACN6E,EADM,OAEWnH,oBAAS,GAFpB,mBAEZoH,EAFY,KAEHC,EAFG,OAGWrH,mBAAS,CAAC,KAHrB,mBAGZsH,EAHY,KAGHC,EAHG,OAIWvH,mBAAS,IAJpB,mBAIZ+E,EAJY,KAIHyC,EAJG,OAKiBxH,oBAAS,GAL1B,mBAKZyH,EALY,KAKAC,EALA,OAMG1H,mBAAS,IANZ,mBAMZuC,EANY,KAMPoF,EANO,KAObxJ,EAAWC,cACXwJ,EAAWvB,KAkDjB,OACE,qCACE,cAAC1H,EAAA,EAAD,CAAYI,QAAQ,KAApB,4CACA,eAAC+B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAYC,GAAI,EAAGC,GAAI,GAAjC,SACE,cAACkC,EAAA,EAAD,CACEqC,MAAM,eACNhC,WAAS,EACTmE,UAAQ,EACRC,MAAOV,EACPrI,QAAQ,WACRwE,SA/Be,SAACC,GACxB2D,EAAQ3D,EAAMC,OAAOtE,OACjBqE,EAAMC,OAAOtE,MACfkI,GAAW,GAEXA,GAAW,IA2BL7I,MAAO,CAAEkB,MAAO,QAChBP,MAAOmD,KATI,QAYf,cAACxB,EAAA,EAAD,CAAMG,MAAI,EAAWC,GAAI,EAAGC,GAAI,GAAhC,SACE,cAACkC,EAAA,EAAD,CACEqC,MAAM,mDACNhC,WAAS,EACT3E,QAAQ,WACRwE,SAjCc,SAACC,GACvBmE,EAAOnE,EAAMC,OAAOtE,QAiCZX,MAAO,CAAEkB,MAAO,QAChBP,MAAOoD,KAPI,OAUf,cAACzB,EAAA,EAAD,CAAMG,MAAI,EAAeC,GAAI,EAAGC,GAAI,GAApC,SACE,eAACiE,EAAA,EAAD,CACEyC,UAAQ,EACRC,MAAOL,EACP1I,QAAQ,WACRP,MAAO,CAAEkB,MAAO,QAJlB,UAME,cAACqI,GAAA,EAAD,CAAYC,QAAQ,QAApB,sCACA,eAACC,GAAA,EAAD,CACEC,QAAM,EACNC,QAAQ,WACRzC,MAAM,2BACNnC,SA/CgB,SAACC,GAC3BgE,EAAWhE,EAAMC,OAAOtE,OACpBqE,EAAMC,OAAOtE,MACfuI,GAAc,GAEdA,GAAc,IA2CNU,WAAY,CAAEC,GAAI,SAClBlJ,MAAO4F,EANT,UAQE,wBAAQ5F,MAAM,KACbmI,EAAQ1I,KAAI,SAACkG,GAAD,OACX,wBAAQ3F,MAAO2F,EAAf,SACGA,GADyBa,0BAlBrB,WAyBf,cAAC7E,EAAA,EAAD,CAAMG,MAAI,EAAWC,GAAI,EAAGC,GAAI,GAAhC,SACE,cAACmH,EAAA,EAAD,CACEpJ,QArGU,WAClB,IAAIyH,GAAM,EAqBV,GAnBKrE,IACH+E,GAAW,GACXO,EAASjB,IAAI,wCACbA,GAAM,GAEH5B,IACH2C,GAAc,GACdE,EAASjB,IAAI,oDACbA,GAAM,GAE4B,IAAhCX,GAAYsB,GAAStI,SACvBgH,GAAYsB,GAASpB,SAAQ,SAACC,GAC5ByB,EAASjB,IAAT,gBAAiBR,EAAM,EAAvB,kDAEFQ,GAAM,GAEJW,EAAQtI,SAAW8H,GAAqBQ,GAAStI,QAAW2H,GAC9DiB,EAAShB,KAAK,6EAEXD,EAAK,CACR,IAAM4B,EAAazB,GAAqBQ,GACxCnJ,ENtCuB,SAACmE,EAAMC,EAAKuC,EAAQC,GAC/C,MAAO,CACLpH,KAAM,QACNE,KAAM,CAAEyE,OAAMC,MAAKuC,SAAQC,YMmChByD,CAAclG,EAAMC,EAAKgG,EAAYxD,MA8ExChG,QAAQ,YACRN,MAAM,UACND,MAAO,CAAEe,OAAQ,GAAIG,MAAO,OAJ9B,6CADa,UAWjB,cAAC0D,EAAA,EAAD,CAAS5E,MAAO,CAAEiK,UAAW,EAAGC,aAAc,KAC9C,cAAC,GAAD,CACEpB,QAASA,EACTC,WAAYA,EACZxC,QAASA,EACTyC,WAAYA,QAOdmB,GAAY,SAAC,GAAkD,IAAhDrB,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,WAAYxC,EAA0B,EAA1BA,QAASyC,EAAiB,EAAjBA,WAmBjD,OACE,eAAC1G,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACGsG,EAAQ1I,KAAI,SAACkG,EAAQpD,GACpB,IAIMkH,EAAqB,WACrB7D,IAAYD,GACd0C,EAAW,IAbC,SAAC9F,GACrB,IAAMmH,EAAiBzE,GAAmBkD,EAAS5F,GACnD6F,EAAWsB,GAaLC,CAAcpH,IAEhB,OACE,cAACZ,EAAA,EAAD,CAAMG,MAAI,EAAcC,GAAI,EAAGC,GAAI,GAAnC,SACE,eAACiE,EAAA,EAAD,CACErG,QAAQ,WACRP,MAAO,CAAEkB,MAAO,QAChBoI,OAAQhD,EACR+C,UAAQ,EAJV,UAME,cAACE,GAAA,EAAD,gCAAkBrG,EAAS,KAC3B,cAACqH,GAAA,EAAD,CACErF,WAAS,EACTH,SArBmB,SAACC,GAC1B,IAAMwF,EAAgBxF,EAAMC,OAAOtE,OApBrB,SAACuC,EAAQuH,GAEzBlE,IAAYuC,EAAQ5F,IACtB8F,EAAWyB,GAIb,IAAMJ,EAAiBvB,EAAQ1I,KAAI,SAACkG,EAAQoE,GAC1C,OAAOA,IAAYxH,EAASuH,EAASnE,KAEvCyC,EAAWsB,GAWLM,CAAczH,EAAQsH,IAoBhB7J,MAAO2F,EACPsE,WAAY,GACZC,aACE,cAACrF,EAAA,EAAD,CAAgB1E,SAAS,MAAzB,SACGoC,IAAW4F,EAAQtI,OAAS,EAC3B,cAACC,EAAA,EAAD,CAAYC,QAAS0J,EAArB,SACE,cAAC,KAAD,MAGF,qCACc,IAAXlH,GACC,cAACzC,EAAA,EAAD,CAAYC,QAAS0J,EAArB,SACE,cAAC,KAAD,MAGJ,cAAC3J,EAAA,EAAD,CACEC,QAAS,WACPqI,EAAWD,EAAQxJ,OAAO,MAF9B,SAKE,cAAC,KAAD,iBA/BA4D,MA0CpB,cAACZ,EAAA,EAAD,CAAMG,MAAI,EAAWC,GAAI,EAAGC,GAAI,IAAjB,WAKNmI,GAlRE,WAAO,IAAD,EACuBtJ,mBAAS,IADhC,mBACduJ,EADc,KACEC,EADF,KAEftF,EAASjG,aAAY,SAACR,GAAD,OAAWA,EAAMoI,iBACtC1H,EAAWC,cAQXuF,EAAOO,EAAOtF,KAAI,SAACkE,EAAOpB,GAC9B,MAAO,CACL2G,GAAI3G,EAAS,EACbY,KAAMQ,EAAMR,KACZwC,OAAQhC,EAAMgC,OAAO2E,KAAK,OAC1B1E,QAASjC,EAAMiC,YASnB,OACE,qCACE,cAAC,EAAD,IACA,eAACpE,EAAA,EAAD,WACE,cAAC,KAAD,CACE+I,YAAY,EACZ/F,KAAMA,EACNgG,QA5BQ,CACd,CAAEC,MAAO,KAAMC,WAAY,eAAMnK,MAAO,KACxC,CAAEkK,MAAO,OAAQC,WAAY,eAAMnK,MAAO,KAC1C,CAAEkK,MAAO,SAAUC,WAAY,eAAMnK,MAAO,KAC5C,CAAEkK,MAAO,UAAWC,WAAY,2BAAQnK,MAAO,MAyBzCoK,SAAU,EACVC,mBAAiB,EACjBC,uBAAwB,SAACC,GACvBT,EACES,EAAaV,eAAe3K,KAAI,SAACsL,GAAD,OAAYC,OAAOD,GAAU,OAGjEX,eAAgBA,EAAe3K,KAAI,SAACsL,GAAD,OAChCA,EAAS,GAAGE,gBAGU,IAA1Bb,EAAevK,QACd,mCACE,cAACsJ,EAAA,EAAD,CACEvJ,QAAQ,YACRN,MAAM,UACNS,QA7Bc,WACxBf,EN6CK,CACLR,KAAM,QACNE,KAAM,CAAE6G,SM/Ce6E,KACvBC,EAAkB,KAwBV,8CASJ,cAAC,GAAD,WC1CFa,GAAS,WAAO,IAAD,EACKrK,mBAAS,IADd,mBACZsC,EADY,KACN6E,EADM,OAEGnH,mBAAS,IAFZ,mBAEZuC,EAFY,KAEPoF,EAFO,KAGbxJ,EAAWC,cAWjB,OACE,qCACE,cAACO,EAAA,EAAD,CAAYI,QAAQ,KAApB,4CACA,eAAC+B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAYC,GAAI,EAAGC,GAAI,GAAjC,SACE,cAACkC,EAAA,EAAD,CACEqC,MAAM,eACNhC,WAAS,EACT3E,QAAQ,WACRwE,SAhBe,SAACC,GACxB2D,EAAQ3D,EAAMC,OAAOtE,QAgBbX,MAAO,CAAEkB,MAAO,QAChBP,MAAOmD,KAPI,QAUf,cAACxB,EAAA,EAAD,CAAMG,MAAI,EAAWC,GAAI,EAAGC,GAAI,GAAhC,SACE,cAACkC,EAAA,EAAD,CACEqC,MAAM,mDACNhC,WAAS,EACT3E,QAAQ,WACRwE,SAvBc,SAACC,GACvBmE,EAAOnE,EAAMC,OAAOtE,QAuBZX,MAAO,CAAEkB,MAAO,QAChBP,MAAOoD,KAPI,OAWf,cAACzB,EAAA,EAAD,CAAMG,MAAI,EAAWC,GAAI,EAAGC,GAAI,GAAhC,SACE,cAACmH,EAAA,EAAD,CACEpJ,QArCU,WAClBf,EVVyB,SAACmE,EAAMC,GAClC,MAAO,CACL5E,KAAM,QACNE,KAAM,CAAEyE,OAAMC,QUOL+H,CAAchI,EAAMC,KAqCrBxD,QAAQ,YACRN,MAAM,UACND,MAAO,CAAEe,OAAQ,GAAIG,MAAO,OAJ9B,6CADa,UAWjB,cAAC0D,EAAA,EAAD,CAAS5E,MAAO,CAAEiK,UAAW,EAAGC,aAAc,SAKrC6B,GArFE,WACf,IAMM5G,EANS1F,aAAY,SAACR,GAAD,OAAWA,EAAM0G,gBAMxBvF,KAAI,SAACkE,EAAOpB,GAC9B,MAAO,CACL2G,GAAI3G,EAAS,EACbY,KAAMQ,EAAMR,SAIhB,OACE,qCACE,cAAC,EAAD,IACA,eAAC3B,EAAA,EAAD,WACE,cAAC,KAAD,CACE+I,YAAY,EACZ/F,KAAMA,EACNgG,QAlBQ,CACd,CAAEC,MAAO,KAAMC,WAAY,eAAMnK,MAAO,KACxC,CAAEkK,MAAO,OAAQC,WAAY,eAAMnK,MAAO,MAiBpCoK,SAAU,IAEZ,cAAC,GAAD,WCjCFH,GAAU,CACd,CAAEC,MAAO,KAAMC,WAAY,iBAAQnK,MAAO,KAC1C,CAAEkK,MAAO,UAAWC,WAAY,iCAASnK,MAAO,KAChD,CAAEkK,MAAO,UAAWC,WAAY,iCAASnK,MAAO,MAG5CiE,GAAO,CACX,CAAE0E,GAAI,2BAAQmC,QAAS,IAAKC,QAAS,KACrC,CAAEpC,GAAI,iCAASmC,QAAS,IAAKC,QAAS,MAczBC,GAXD,WACZ,OACE,qCACE,cAAC,EAAD,IACA,eAAC/J,EAAA,EAAD,CAAWnC,MAAO,CAAEe,OAAQ,KAA5B,UACE,cAACZ,EAAA,EAAD,CAAYI,QAAQ,KAApB,kDACA,cAAC,KAAD,CAAU4E,KAAMA,GAAMgG,QAASA,GAASG,SAAU,WCqBpDa,GAAiB,SAAC9K,GACtB,OACE,cAACiB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACE,cAAC,EAAD,CACEtC,GAAIgB,EAAKhB,GACTL,MAAO,CACLM,eAAgB,OAChB8L,cAAe,UAJnB,SAOE,cAAC,EAAD,UACE,cAACvJ,EAAA,EAAD,UACE,cAAC1C,EAAA,EAAD,CAAYF,MAAM,cAAcoM,MAAM,SAAS9L,QAAQ,KAAvD,SACGc,EAAKqC,gBASL4I,GAvDG,WAChB,OAAQ/E,cAAYgF,OAClB,IAAK,QACH,OAAO,cAAC,GAAD,IAET,IAAK,WACH,OAAO,cAAC,GAAD,IAET,IAAK,WACH,OAAO,cAAC,GAAD,IAUX,OACE,qCACE,cAAC,EAAD,IACA,cAACpK,EAAA,EAAD,CAAWnC,MAAO,CAAEe,OAAQ,KAA5B,SACE,cAACuB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SATQ,CACZ,CAAEnC,GAAI,eAAgBqD,KAAM,wCAC5B,CAAErD,GAAI,kBAAmBqD,KAAM,kCAC/B,CAAErD,GAAI,kBAAmBqD,KAAM,mCAOlBtD,KAAI,SAAC6C,GAAD,OACT,cAAC,GAAD,CAAgB5C,GAAI4C,EAAK5C,GAAIqD,KAAMT,EAAKS,MAAWT,EAAK5C,e,mBCnC9DtB,GAAe,CACnB,CACE2E,KAAM,qBACNJ,IAAK,MACLK,YAAa,mDACb1D,MAAO,UACP8D,IAAK,KAwEMyI,GAxBM,WAAmC,IAAlCvN,EAAiC,uDAAzBF,GAAcG,EAAW,uCACrD,OAAQA,EAAOC,MACb,IAAK,WACH,OAAOF,EAAMK,OAAOJ,EAAOG,MAE7B,QACE,OAAOJ,I,mBCzDPF,GAAe0N,aAAeC,IAoBrBC,GAlBM,WAAmC,IAAlC1N,EAAiC,uDAAzBF,GAAcG,EAAW,uCACrD,OAAQA,EAAOC,MACb,IAAK,cACH,OAAOD,EAAOG,KAEhB,QACE,OAAOJ,ICXPF,GAAe,uCAoBN6N,GAlBM,WAAmC,IAAlC3N,EAAiC,uDAAzBF,GAAcG,EAAW,uCACrD,OAAQA,EAAOC,MACb,IAAK,cACH,OAAOD,EAAOG,KAEhB,QACE,OAAOJ,ICEP4N,GAAUC,2BAAgB,CAC9BzF,cAAeZ,GACfd,aAAcxB,EACdtD,MAAO+L,GACP5J,MAAOwJ,GACPO,MAAOJ,GACPjN,QAASV,EACTgD,QAASC,IAKI+K,GAFDC,uBAAYJ,GAASK,kCCC7BC,GAAO,WACX,IAAMJ,EAAQtN,aAAY,SAACR,GAAD,OAAWA,EAAM8N,SACrCK,EAAeC,IAAMC,YACrBC,EAAiB,SAAClK,GAAD,OAAS,WAC9B+J,EAAaI,QAAQC,cAAcpK,KAErC,OACE,cAACqK,EAAA,EAAD,CAAeX,MAAOA,EAAtB,SACE,cAAC,IAAD,CACEY,SAAU,EACVC,kBAAgB,EAChBC,IAAKT,EACLlO,OAAQ,SAACmE,GAAD,OACN,cAACyG,EAAA,EAAD,CAAQpJ,QAAS6M,EAAelK,GAAMrD,MAAO,CAAEC,MAAO,QAAtD,2BALJ,SAUE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6N,KAAK,gBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,gBASCC,GAlDH,WACV,OACE,cAAC,IAAD,CAAUf,MAAOA,GAAjB,SACE,cAAC,GAAD,OCJcgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCjBnC,IAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDRQ,GAAcC,SAASC,eAAe,QACxCF,GAAYG,gBACdC,IAASC,QAAQ,cAAC,GAAD,IAASL,IAE1BI,IAASE,OAAO,cAAC,GAAD,IAASN,IFqHrB,kBAAmBO,WACrBA,UAAUC,cAAcC,MACrBf,MAAK,SAACgB,GACLA,EAAaC,gBAEdC,OAAM,SAACpG,GACNqG,QAAQrG,MAAMA,EAAMsG,YEhH5BvB,O","file":"static/js/main.7aff4eb0.chunk.js","sourcesContent":["const initialState = [];\n\nconst historyReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONCATHISTORY\": {\n      return state.includes(action.data) ? state : state.concat(action.data);\n    }\n    case \"CLEARHISTORY\": {\n      return [];\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const concatHistory = (value) => {\n  return {\n    type: \"CONCATHISTORY\",\n    data: value,\n  };\n};\n\nexport const clearHistory = (value) => {\n  return {\n    type: \"CLEARHISTORY\",\n    data: value,\n  };\n};\n\nexport default historyReducer;\n","import {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  Breadcrumbs,\n} from \"@material-ui/core\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { clearHistory } from \"../reducers/historyReducer\";\n\nconst Header = () => {\n  const title = useSelector((state) => state.title);\n\n  return (\n    <>\n      <title>{title}</title>\n      <div position=\"static\" style={{ height: 72 }}></div>\n      <AppBar position=\"fixed\">\n        <Toolbar style={{ width: \"100%\", paddingLeft: 8 }}>\n          &emsp;<Typography variant=\"h6\">{title}</Typography>&emsp;\n          <Link to=\"/\">\n            <IconButton>\n              <HomeIcon style={{ color: \"white\" }} />\n            </IconButton>\n          </Link>\n          <History />\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nconst History = () => {\n  const histories = useSelector((state) => state.history);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        style={{ color: \"white\",marginLeft: -15}}\n      >\n        <Typography></Typography>\n        {histories.map((history) => {\n          return (\n            <Link to={history} style={{ textDecoration: \"none\" }} key={history}>\n              <Typography style={{ color: \"white\" }} variant=\"inherit\">\n                {history}\n              </Typography>\n            </Link>\n          );\n        })}\n      </Breadcrumbs>\n      {histories.length !== 0 && (\n        <IconButton\n          variant=\"body2\"\n          onClick={() => {\n            dispatch(clearHistory());\n          }}\n        >\n          <DeleteIcon style={{ color: \"white\" }} />\n        </IconButton>\n      )}\n    </>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { concatHistory } from \"../reducers/historyReducer\";\n\nconst MyLink = (prop) => {\n  const dispatch = useDispatch();\n  const handleClick = (to) => {\n    dispatch(concatHistory(to));\n  };\n  return (\n    <div>\n      <Link\n        to={prop.to}\n        style={{ textDecoration: \"none\" }}\n        onClick={() => {\n          handleClick(prop.to);\n        }}\n      >\n        {prop.children}\n      </Link>\n    </div>\n  );\n};\n\nexport default MyLink;\n","import { Card } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nconst MyCard = (prop) => {\n  const [over, setOver] = useState(false);\n  return (\n    <Card\n      style={{ width: \"100%\", height: \"100%\" }}\n      onMouseOver={() => {\n        setOver(true);\n      }}\n      onMouseOut={() => {\n        setOver(false);\n      }}\n      raised={over}\n    >\n      {prop.children}\n    </Card>\n  );\n};\n\nexport default MyCard;\n","const subjectReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"SETSUBJECT\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n\n/** Set the subject. */\nexport const setSubject = (subject) => {\n  return { type: \"SETSUBJECT\", data: subject };\n};\n\nexport default subjectReducer;\n","import {\n  CardContent,\n  Container,\n  Grid,\n  Grow,\n  Typography,\n  CardActionArea,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Header from \"../components/Header\";\nimport MyLink from \"../components/MyLink\";\nimport MyCard from \"../components/MyCard\";\nimport { setSubject } from \"../reducers/subjectReducer\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  dispatch(setSubject(\"\"));\n  return (\n    <Container>\n      <Header />\n      <Grow in={true}>\n        <Grid container spacing={2}>\n          <Grid item lg={6} xs={12}>\n            <MyLink to=\"/exam\" style={{ textDecoration: \"none\" }}>\n              <MyCard>\n                <CardActionArea style={{ width: \"100%\", height: \"100%\" }}>\n                  <CardContent style={{ textAlign: \"center\" }}>\n                    <Typography variant=\"h6\">来这里考试</Typography>\n                  </CardContent>\n                </CardActionArea>\n              </MyCard>\n            </MyLink>\n          </Grid>\n          <Grid item lg={6} xs={12}>\n            <MyLink to=\"/admin\" style={{ textDecoration: \"none\" }}>\n              <MyCard>\n                <CardActionArea style={{ width: \"100%\", height: \"100%\" }}>\n                  <CardContent style={{ textAlign: \"center\" }}>\n                    <Typography variant=\"h6\">来这里管理</Typography>\n                  </CardContent>\n                </CardActionArea>\n              </MyCard>\n            </MyLink>\n          </Grid>\n        </Grid>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default Home;\n","import {\n  CardActionArea,\n  CardContent,\n  Grid,\n  Grow,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport MyLink from \"../components/MyLink\";\nimport MyCard from \"./MyCard\";\n\nconst Links = () => {\n  const links = useSelector((state) => state.links);\n  return (\n    <Grid container spacing={2}>\n      {links.map((link, arynum) => {\n        return (\n          <Grow\n            in={true}\n            style={{ transformOrigin: \"0 0 0\" }}\n            {...{ timeout: 300 * arynum }}\n            key={link.url}\n          >\n            <Grid item key={link.url} lg={3} md={6} sm={12} xs={12}>\n              <MyLink to={`/exam${link.url}`} style={{ textDecoration: \"none\" }}>\n                <MyCard>\n                  <CardActionArea style={{ width: \"100%\", height: \"100%\" }}>\n                    <CardContent>\n                      <li style={{ color: link.color, marginLeft: 20 }}>\n                        <Typography gutterBottom>{link.text}</Typography>\n                        <span>\n                          <Typography\n                            variant=\"body2\"\n                            style={{ color: \"#232129\" }}\n                          >\n                            {link.description}\n                          </Typography>\n                        </span>\n                      </li>\n                    </CardContent>\n                  </CardActionArea>\n                </MyCard>\n              </MyLink>\n            </Grid>\n          </Grow>\n        );\n      })}\n    </Grid>\n  );\n};\nexport default Links;\n","import {\n  //Link,\n  Container,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport Header from \"../components/Header\";\nimport Links from \"../components/Links\";\n\n// styles\n\n// markup\nconst Exam = () => {\n  return (\n    <>\n      <Header />\n      <Container style={{ maxWidth: \"100%\" }}>\n        <Typography gutterBottom variant=\"h6\">\n          可用题库\n        </Typography>\n        <Links />\n      </Container>\n    </>\n  );\n};\n\nexport default Exam;\n","const initialState = [\n  {\n    stem: \"简述什么是非对称加密？\",\n    img:\n      \"https://cn.bing.com/th?id=OHR.HumpbackMom_ZH-CN0218207583_1920x1080.jpg\",\n  },\n  { stem: \"编写这个网页用到了哪些语言？\" },\n];\n\nconst shortAnswerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ANSWERSA\": {\n      const objnum = action.data.objnum;\n      const answerToChange = state[objnum];\n      const changedAnswer = { ...answerToChange, answer: action.data.answer };\n      return state.map((quest, questnum) =>\n        questnum === objnum ? changedAnswer : quest\n      );\n    }\n    case \"ADDSA\": {\n      const newQuest = {\n        stem: action.data.stem,\n        img: action.data.img,\n      };\n      return state.concat(newQuest);\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const answerSAQuestion = (objnum, value) => {\n  return {\n    type: \"ANSWERSA\",\n    data: { objnum: objnum, answer: value },\n  };\n};\n\nexport const addSAQuestion = (stem, img) => {\n  return {\n    type: \"ADDSA\",\n    data: { stem, img },\n  };\n};\n\nexport default shortAnswerReducer;\n","import {\n  CardContent,\n  CardMedia,\n  Divider,\n  Grid,\n  Grow,\n  InputAdornment,\n  TextField,\n  Typography,\n  CardActionArea,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { answerSAQuestion } from \"../reducers/shortAnswerReducer\";\nimport MyCard from \"./MyCard\";\n\nconst ShortAnswer = (prop) => {\n  const dispatch = useDispatch();\n  const handleChange = (event) => {\n    dispatch(answerSAQuestion(prop.arynum, event.target.value));\n  };\n  return (\n    <MyCard>\n      {prop.quest.img ? (\n        <>\n          <CardMedia image={prop.quest.img} style={{ height: 250 }} />\n          <Divider />\n        </>\n      ) : null}\n      <CardContent>\n        <CardActionArea\n          onClick={() => {\n            dispatch(answerSAQuestion(prop.arynum, \"\"));\n          }}\n        >\n          <Typography gutterBottom>{prop.quest.stem}</Typography>\n          <Typography variant=\"body2\" style={{ color: \"rgba(0, 0, 0, 0.54)\" }}>\n            （点此清除本题答案）\n          </Typography>\n        </CardActionArea>\n        <TextField\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          onChange={handleChange}\n          multiline\n          rows=\"4\"\n          rowsMax=\"10\"\n          style={{ width: \"100%\",paddingTop:5 }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">答：</InputAdornment>\n            ),\n          }}\n        ></TextField>\n      </CardContent>\n    </MyCard>\n  );\n};\n\nconst ShortAnswers = (prop) => {\n  const quests = useSelector((state) => state.shortanswers);\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        简答题\n      </Typography>\n      <Grid container spacing={2}>\n        {quests.map((quest, arynum) => (\n          <Grow\n            in={true}\n            style={{ transformOrigin: \"0 0 0\" }}\n            {...{ timeout: 1000 * arynum }}\n            key={quest.stem}\n          >\n            <Grid item lg={12} xs={12}>\n              <ShortAnswer quest={quest} arynum={arynum} />\n            </Grid>\n          </Grow>\n        ))}\n      </Grid>\n    </>\n  );\n};\nexport default ShortAnswers;\n","/** Input an array and index of the item you want to delete,\n *  returns a new array with all items of the original array\n * except the item you want to delete. */\nconst deleteArrayElement = (ary, itemnum) => {\n  const changedAry = [\n    ...ary.slice(0, itemnum),\n    ...ary.slice(itemnum + 1, ary.length),\n  ];\n  return changedAry;\n};\n\n/** Input an array and an array of indexes of the items you want to delete,\n *  returns a new array with all items of the original array\n * except the items you want to delete. */\nexport const deleteArrayElements = (aryToChange, indexAry) => {\n  let changingAry = aryToChange;\n  for (let index = 0; index < indexAry.length; index++) {\n    const element = indexAry[index];\n    changingAry = deleteArrayElement(changingAry, element - index);\n  }\n  const changedAry = changingAry\n  return changedAry;\n};\n\nexport default deleteArrayElement;\n","import { deleteArrayElements } from \"../utils/deleteArrayElement\";\n\nconst initialState = [\n  {\n    stem: \"“无知之幕”的概念出自？\",\n    img: \"\",\n    choice: [\n      \"《资本论》——马克思\",\n      \"《正义论》——罗尔斯\",\n      \"《逻辑哲学论》——维特根斯坦\",\n      \"《君主论》——马基雅维利\",\n    ],\n    correct: \"《正义论》——罗尔斯\",\n  },\n  {\n    stem: \"世界上应用最广泛的音律制是？\",\n    img: \"\",\n    choice: [\"十二平均律\", \"十六平均律\"],\n    correct: \"十二平均律\",\n  },\n  {\n    stem:\n      \"“生产的发展和私有制的产生，使人类脱离了‘自然状态’，产生了贫富不均的社会现象”，这种说法最早出自？\",\n    img: \"\",\n    choice: [\n      \"《德意志意识形态》——马克思\",\n      \"《共产党宣言》——马克思、恩格斯\",\n      \"《论人类不平等的起源和基础》——卢梭\",\n      \"《纯粹理性批判》——康德\",\n    ],\n    correct: \"《论人类不平等的起源和基础》——卢梭\",\n  },\n  {\n    stem:\n      \"《共产党宣言》认为，工人革命的第一步就是使无产阶级上升为统治阶级，争得（）\",\n    img: \"\",\n    choice: [\"自由\", \"平等\", \"财富\", \"民主\"],\n    correct: \"民主\",\n  },\n  {\n    stem: \"TCP/IP协议模型分几层？\",\n    choice: [\"3\", \"4\", \"5\", \"6\"],\n    correct: \"4\",\n  },\n  {\n    stem: \"奔腾处理器原来计划叫什么？\",\n    img:\n      \"https://cn.bing.com/th?id=OHR.HumpbackMom_ZH-CN0218207583_1920x1080.jpg\",\n    choice: [\"8086\", \"80386\", \"80486\", \"80586\"],\n    correct: \"80586\",\n  },\n];\n\nconst singleChoiceReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ANSWERSC\": {\n      const objnum = action.data.objnum;\n      const answerToChange = state[objnum];\n      const changedAnswer = { ...answerToChange, answer: action.data.answer };\n      return state.map((quest, questnum) =>\n        questnum === objnum ? changedAnswer : quest\n      );\n    }\n    case \"ADDSC\": {\n      const newQuest = {\n        stem: action.data.stem,\n        img: action.data.img,\n        choice: action.data.choice,\n        correct: action.data.correct,\n      };\n      return state.concat(newQuest);\n    }\n    case \"DELSC\": {\n      const changedQuests = deleteArrayElements(state, action.data.indexAry);\n      return changedQuests;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const answerSCQuestion = (objnum, value) => {\n  return {\n    type: \"ANSWERSC\",\n    data: { objnum: objnum, answer: value },\n  };\n};\n\nexport const addSCQuestion = (stem, img, choice, correct) => {\n  return {\n    type: \"ADDSC\",\n    data: { stem, img, choice, correct },\n  };\n};\n\nexport const delSCQuestion = (indexAry) => {\n  return {\n    type: \"DELSC\",\n    data: { indexAry },\n  };\n};\n\nexport default singleChoiceReducer;\n","import {\n  CardContent,\n  CardMedia,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Grow,\n  Radio,\n  RadioGroup,\n  Typography,\n  CardActionArea,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { answerSCQuestion } from \"../reducers/singleChoiceReducer\";\nimport MyCard from \"./MyCard\";\n\nconst SingleChoice = (prop) => {\n  const dispatch = useDispatch();\n  const handleChange = (event) => {\n    dispatch(answerSCQuestion(prop.arynum, event.target.value));\n  };\n  return (\n    <MyCard>\n      {prop.quest.img ? (\n        <>\n          <CardMedia image={prop.quest.img} style={{ height: 250 }} />\n          <Divider />\n        </>\n      ) : null}\n      <CardContent>\n        <CardActionArea\n          onClick={() => {\n            dispatch(answerSCQuestion(prop.arynum, \"\"));\n          }}\n        >\n          <Typography gutterBottom>{prop.quest.stem}</Typography>\n          <Typography variant=\"body2\" style={{ color: \"rgba(0, 0, 0, 0.54)\" }}>\n            （点此清除本题已选项）\n          </Typography>\n        </CardActionArea>\n        <FormControl>\n          <FormLabel></FormLabel>\n          <RadioGroup\n            onChange={handleChange}\n            value={prop.quest.answer ? prop.quest.answer : \"\"}\n          >\n            {prop.quest.choice.map((choice) => {\n              return (\n                <FormControlLabel\n                  value={choice}\n                  control={<Radio />}\n                  label={choice}\n                  key={uuidv4()}\n                />\n              );\n            })}\n          </RadioGroup>\n        </FormControl>\n      </CardContent>\n    </MyCard>\n  );\n};\n\nconst SingleChoices = (prop) => {\n  const quests = useSelector((state) => state.singlechoices);\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        单选题\n      </Typography>\n      <Grid container spacing={2}>\n        {quests.map((quest, arynum) => (\n          <Grow\n            in={true}\n            style={{ transformOrigin: \"0 0 0\" }}\n            {...{ timeout: 300 * arynum }}\n            key={quest.stem}\n          >\n            <Grid item lg={12} xs={12}>\n              <SingleChoice quest={quest} arynum={arynum} />\n            </Grid>\n          </Grow>\n        ))}\n      </Grid>\n    </>\n  );\n};\nexport default SingleChoices;\n","import { Container } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport ShortAnswers from \"../components/ShortAnswer\";\nimport SingleChoices from \"../components/SingleChoice\";\nimport { setSubject } from \"../reducers/subjectReducer\";\n\nconst Quest = () => {\n  const dispatch = useDispatch();\n  dispatch(setSubject(useParams().subject));\n  return (\n    <Container>\n      <Header />\n      <SingleChoices />\n      <ShortAnswers />\n    </Container>\n  );\n};\nexport default Quest;\n","/** Detect empty items in an array, return an array of empty items' index. */ \nconst detectEmpty = (ary) => {\n  let total = [];\n  ary.forEach((item, num) => {\n    if (!item) {\n      total.push(num);\n    }\n  });\n  return total;\n};\nexport default detectEmpty;\n","import { useSnackbar } from \"notistack\";\n\n/** My custom hook to simplify the useSnackbar hook\n * and the enqueueSnackbar function. */\nconst useMySnackbar = () => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  /** To get a default snackbar. */\n  const inherit = (msg) => {\n    enqueueSnackbar(msg, {\n      variant: \"default\",\n    });\n  };\n\n  /** To get a success snackbar. */\n  const success = (msg) => {\n    enqueueSnackbar(msg, {\n      variant: \"success\",\n    });\n  };\n\n  /** To get a error snackbar. */\n  const err = (msg) => {\n    enqueueSnackbar(msg, {\n      variant: \"error\",\n    });\n  };\n\n  /** To get a warning snackbar. */\n  const warn = (msg) => {\n    enqueueSnackbar(msg, {\n      variant: \"warning\",\n    });\n  };\n\n  /** To get a info snackbar. */\n  const info = (msg) => {\n    enqueueSnackbar(msg, {\n      variant: \"info\",\n    });\n  };\n  return { inherit, success, err, warn, info };\n};\nexport default useMySnackbar;\n","/**Remove dumplicated items from an array, then return an new array.*/\nconst removeDuplicatedItem = (ary) => {\n  const orderedAry = Array.from(new Set(ary));\n  return orderedAry;\n};\nexport default removeDuplicatedItem;\n","import {\n  Button,\n  Container,\n  Divider,\n  FormControl,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Header from \"../../components/Header\";\nimport {\n  addSCQuestion,\n  delSCQuestion,\n} from \"../../reducers/singleChoiceReducer\";\nimport deleteArrayElement from \"../../utils/deleteArrayElement\";\nimport detectEmpty from \"../../utils/detectEmpty\";\nimport useMySnackbar from \"../../utils/hooks/useMySnackbar\";\nimport removeDuplicatedItem from \"../../utils/removeDumplicatedItem\";\n\n/** Render the whole page.*/\nconst SCQuests = () => {\n  const [selectionModel, setSelectionModel] = useState([]);\n  const quests = useSelector((state) => state.singlechoices);\n  const dispatch = useDispatch();\n  const columns = [\n    { field: \"id\", headerName: \"题号\", width: 100 },\n    { field: \"stem\", headerName: \"题干\", width: 280 },\n    { field: \"choice\", headerName: \"选项\", width: 280 },\n    { field: \"correct\", headerName: \"正确答案\", width: 200 },\n  ];\n\n  const rows = quests.map((quest, arynum) => {\n    return {\n      id: arynum + 1,\n      stem: quest.stem,\n      choice: quest.choice.join(\" / \"),\n      correct: quest.correct,\n    };\n  });\n\n  const handleDeleteClick = () => {\n    dispatch(delSCQuestion(selectionModel));\n    setSelectionModel([]);\n  };\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <DataGrid\n          autoHeight={true}\n          rows={rows}\n          columns={columns}\n          pageSize={5}\n          checkboxSelection\n          onSelectionModelChange={(newSelection) => {\n            setSelectionModel(\n              newSelection.selectionModel.map((select) => Number(select) - 1)\n            );\n          }}\n          selectionModel={selectionModel.map((select) =>\n            (select + 1).toString()\n          )}\n        />\n        {selectionModel.length !== 0 && (\n          <>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleDeleteClick}\n            >\n              删除所选项\n            </Button>\n          </>\n        )}\n        <AddSCQ />\n      </Container>\n    </>\n  );\n};\n\n/** Component for user to add quests. */\nconst AddSCQ = () => {\n  const [stem, setStem] = useState(\"\");\n  const [stemErr, setStemErr] = useState(false);\n  const [choices, setChoices] = useState([\"\"]);\n  const [correct, setCorrect] = useState(\"\");\n  const [correctErr, setCorrectErr] = useState(false);\n  const [img, setImg] = useState(\"\");\n  const dispatch = useDispatch();\n  const snackbar = useMySnackbar();\n\n  const submitQuest = () => {\n    let err = false;\n    //Detect all requirements\n    if (!stem) {\n      setStemErr(true);\n      snackbar.err(\"题干不得为空\");\n      err = true;\n    }\n    if (!correct) {\n      setCorrectErr(true);\n      snackbar.err(\"正确选项不得为空\");\n      err = true;\n    }\n    if (detectEmpty(choices).length !== 0) {\n      detectEmpty(choices).forEach((num) => {\n        snackbar.err(`第${num + 1}个选项不得为空`);\n      });\n      err = true;\n    }\n    if (choices.length !== removeDuplicatedItem(choices).length && !err) {\n      snackbar.warn(\"选项存在重复，已自动去除\");\n    }\n    if (!err) {\n      const newChoices = removeDuplicatedItem(choices); // To remove the duplicated choices.\n      dispatch(addSCQuestion(stem, img, newChoices, correct));\n    }\n  };\n\n  const handleStemChange = (event) => {\n    setStem(event.target.value);\n    if (event.target.value) {\n      setStemErr(false);\n    } else {\n      setStemErr(true);\n    }\n  };\n  const handleImgChange = (event) => {\n    setImg(event.target.value);\n  };\n  const handleCorrectChange = (event) => {\n    setCorrect(event.target.value);\n    if (event.target.value) {\n      setCorrectErr(false);\n    } else {\n      setCorrectErr(true);\n    }\n  };\n\n  return (\n    <>\n      <Typography variant=\"h6\">新增题目：</Typography>\n      <Grid container spacing={2}>\n        <Grid item key=\"stem\" lg={3} xs={12}>\n          <TextField\n            label=\"题干\"\n            multiline\n            required\n            error={stemErr}\n            variant=\"outlined\"\n            onChange={handleStemChange}\n            style={{ width: \"100%\" }}\n            value={stem}\n          />\n        </Grid>\n        <Grid item key=\"img\" lg={3} xs={12}>\n          <TextField\n            label=\"图片地址（选填）\"\n            multiline\n            variant=\"outlined\"\n            onChange={handleImgChange}\n            style={{ width: \"100%\" }}\n            value={img}\n          />\n        </Grid>\n        <Grid item key=\"correct\" lg={3} xs={12}>\n          <FormControl\n            required\n            error={correctErr}\n            variant=\"outlined\"\n            style={{ width: \"100%\" }}\n          >\n            <InputLabel htmlFor=\"fkyou\">正确选项</InputLabel>\n            <Select\n              native\n              labelId=\"sltlabel\"\n              label=\"正确选项\"\n              onChange={handleCorrectChange}\n              inputProps={{ id: \"fkyou\" }}\n              value={correct}\n            >\n              <option value=\"\"></option>\n              {choices.map((choice) => (\n                <option value={choice} key={uuidv4()}>\n                  {choice}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item key=\"btn\" lg={3} xs={12}>\n          <Button\n            onClick={submitQuest}\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ height: 56, width: \"50%\" }}\n          >\n            提交新题目\n          </Button>\n        </Grid>\n      </Grid>\n      <Divider style={{ marginTop: 5, marginBottom: 5 }} />\n      <SCChoices\n        choices={choices}\n        setChoices={setChoices}\n        correct={correct}\n        setCorrect={setCorrect}\n      />\n    </>\n  );\n};\n\n/** Component to manage the choices of a quest. */\nconst SCChoices = ({ choices, setChoices, correct, setCorrect }) => {\n  /** The function to handle the change of an choice,\n   * then change the choices array.*/\n  const changeChoices = (arynum, cgdchs) => {\n    /* To check if the selector of correct answer match the choice we're editing.*/\n    if (correct === choices[arynum]) {\n      setCorrect(cgdchs);\n    }\n\n    /* Generate changed array of choices and update the original array.*/\n    const changedChoices = choices.map((choice, arynumb) => {\n      return arynumb === arynum ? cgdchs : choice;\n    });\n    setChoices(changedChoices);\n  };\n  const deleteChoices = (arynum) => {\n    const changedChoices = deleteArrayElement(choices, arynum);\n    setChoices(changedChoices);\n  };\n  return (\n    <Grid container spacing={2}>\n      {choices.map((choice, arynum) => {\n        const handleChoiceChange = (event) => {\n          const changedChoice = event.target.value;\n          changeChoices(arynum, changedChoice);\n        };\n        const handleChoiceDelete = () => {\n          if (correct === choice) {\n            setCorrect(\"\");\n          }\n          deleteChoices(arynum);\n        };\n        return (\n          <Grid item key={arynum} lg={3} xs={12}>\n            <FormControl\n              variant=\"outlined\"\n              style={{ width: \"100%\" }}\n              error={!choice}\n              required\n            >\n              <InputLabel>{`选项${arynum + 1}`}</InputLabel>\n              <OutlinedInput\n                multiline\n                onChange={handleChoiceChange}\n                value={choice}\n                labelWidth={42}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    {arynum !== choices.length - 1 ? (\n                      <IconButton onClick={handleChoiceDelete}>\n                        <CancelOutlinedIcon />\n                      </IconButton>\n                    ) : (\n                      <>\n                        {arynum !== 0 && (\n                          <IconButton onClick={handleChoiceDelete}>\n                            <CancelOutlinedIcon />\n                          </IconButton>\n                        )}\n                        <IconButton\n                          onClick={() => {\n                            setChoices(choices.concat(\"\"));\n                          }}\n                        >\n                          <AddCircleOutlineOutlinedIcon />\n                        </IconButton>\n                      </>\n                    )}\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          </Grid>\n        );\n      })}\n      <Grid item key=\"add\" lg={3} xs={12}></Grid>\n    </Grid>\n  );\n};\n\nexport default SCQuests;\n","import {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../../components/Header\";\nimport { addSAQuestion } from \"../../reducers/shortAnswerReducer\";\n\nconst SAQuests = () => {\n  const quests = useSelector((state) => state.shortanswers);\n\n  const columns = [\n    { field: \"id\", headerName: \"题号\", width: 100 },\n    { field: \"stem\", headerName: \"题干\", width: 280 },\n  ];\n  const rows = quests.map((quest, arynum) => {\n    return {\n      id: arynum + 1,\n      stem: quest.stem,\n    };\n  });\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <DataGrid\n          autoHeight={true}\n          rows={rows}\n          columns={columns}\n          pageSize={5}\n        />\n        <AddSAQ />\n      </Container>\n    </>\n  );\n};\n\nconst AddSAQ = () => {\n  const [stem, setStem] = useState(\"\");\n  const [img, setImg] = useState(\"\");\n  const dispatch = useDispatch();\n  const submitQuest = () => {\n    dispatch(addSAQuestion(stem, img));\n  };\n  const handleStemChange = (event) => {\n    setStem(event.target.value);\n  };\n  const handleImgChange = (event) => {\n    setImg(event.target.value);\n  };\n\n  return (\n    <>\n      <Typography variant=\"h6\">新增题目：</Typography>\n      <Grid container spacing={2}>\n        <Grid item key=\"stem\" lg={3} xs={12}>\n          <TextField\n            label=\"题干\"\n            multiline\n            variant=\"outlined\"\n            onChange={handleStemChange}\n            style={{ width: \"100%\" }}\n            value={stem}\n          />\n        </Grid>\n        <Grid item key=\"img\" lg={3} xs={12}>\n          <TextField\n            label=\"图片地址（选填）\"\n            multiline\n            variant=\"outlined\"\n            onChange={handleImgChange}\n            style={{ width: \"100%\" }}\n            value={img}\n          />\n        </Grid>\n\n        <Grid item key=\"btn\" lg={3} xs={12}>\n          <Button\n            onClick={submitQuest}\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ height: 56, width: \"50%\" }}\n          >\n            提交新题目\n          </Button>\n        </Grid>\n      </Grid>\n      <Divider style={{ marginTop: 5, marginBottom: 5 }} />\n    </>\n  );\n};\n\nexport default SAQuests;\n","import React from \"react\";\nimport Header from \"../../components/Header\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { Typography, Container } from \"@material-ui/core\";\n\nconst columns = [\n  { field: \"id\", headerName: \"豆瓣ID\", width: 140 },\n  { field: \"SCscore\", headerName: \"选择题得分\", width: 140 },\n  { field: \"SAscore\", headerName: \"简答题得分\", width: 140 },\n];\n\nconst rows = [\n  { id: \"田所浩二\", SCscore: 114, SAscore: 514 },\n  { id: \"多田野树人\", SCscore: 889, SAscore: 464 },\n];\n\nconst Score = () => {\n  return (\n    <>\n      <Header />\n      <Container style={{ height: 500 }}>\n        <Typography variant=\"h6\">已答题用户：</Typography>\n        <DataGrid rows={rows} columns={columns} pageSize={5} />\n      </Container>\n    </>\n  );\n};\nexport default Score;\n","import { CardContent, Container, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Header from \"../../components/Header\";\nimport MyCard from \"../../components/MyCard\";\nimport MyLink from \"../../components/MyLink\";\nimport SCQuests from \"./SCQuests\";\nimport SAQuests from \"./SAQuests\";\nimport Score from \"./Score\";\n\nconst AdminHome = () => {\n  switch (useParams().route) {\n    case \"score\": {\n      return <Score />;\n    }\n    case \"scquests\": {\n      return <SCQuests />;\n    }\n    case \"saquests\": {\n      return <SAQuests />;\n    }\n    default:\n      break;\n  }\n  const links = [\n    { to: \"/admin/score\", text: \"查看每人分数\" },\n    { to: \"/admin/scquests\", text: \"管理选择题\" },\n    { to: \"/admin/saquests\", text: \"管理简答题\" },\n  ];\n  return (\n    <>\n      <Header />\n      <Container style={{ height: 500 }}>\n        <Grid container spacing={2}>\n          {links.map((link) => (\n            <AdminHomeLinks to={link.to} text={link.text} key={link.to} />\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nconst AdminHomeLinks = (prop) => {\n  return (\n    <Grid item lg={3} xs={12}>\n      <MyLink\n        to={prop.to}\n        style={{\n          textDecoration: \"none\",\n          verticalAlign: \"middle\",\n        }}\n      >\n        <MyCard>\n          <CardContent>\n            <Typography color=\"textPrimary\" align=\"center\" variant=\"h6\">\n              {prop.text}\n            </Typography>\n          </CardContent>\n        </MyCard>\n      </MyLink>\n    </Grid>\n  );\n};\n\nexport default AdminHome;\n","const initialState = [\n  {\n    text: \"测试服\",\n    url: \"/it\",\n    description: \"先来这儿玩玩吧？\",\n    color: \"#E95800\",\n    img: \"\",\n  },\n/*  {\n    text: \"物理\",\n    url: \"/phy\",\n    description: \"大学物理，会卷你就来\",\n    color: \"#095852\",\n    img: \"\",\n  },\n  {\n    text: \"化学\",\n    url: \"/chem\",\n    description: \"无机化学，会卷你就来\",\n    color: \"#795800\",\n    img: \"\",\n  },\n  {\n    text: \"历史\",\n    url: \"/history\",\n    description: \"综合历史\",\n    color: \"#002222\",\n    img: \"\",\n    badge: true,\n  },\n  {\n    text: \"西方哲学 / 逻辑学\",\n    url: \"/philosophy\",\n    description: \"西方哲学 / 逻辑学\",\n    color: \"#66CCFF\",\n    img: \"\",\n  },\n  {\n    text: \"马-恩-列-斯-毛-社会主义理论\",\n    url: \"/maoism\",\n    description: \"历史上影响力最大的的左翼理论\",\n    color: \"#AA0000\",\n    img: \"\",\n  },\n  {\n    text: \"其它社会主义理论\",\n    url: \"/socism\",\n    description:\n      \"包括但不限于：左翼无政府主义、空想（乌托邦）社会主义、国家社会主义等\",\n    color: \"#DD0000\",\n    img: \"\",\n  },*/\n];\n\nconst linksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADDALINK\": {\n      return state.concat(action.data);\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const addALink = (text, url, description, color, img) => {\n  return {\n    type: \"ADDALINK\",\n    data: {\n      text: text,\n      url: url,\n      description: description,\n      color: color,\n      img: img,\n    },\n  };\n};\n\nexport default linksReducer;\n","import mycolor from \"../styles/theme.json\";\nimport { createMuiTheme } from \"@material-ui/core\";\n\nconst initialState = createMuiTheme(mycolor);\n\nconst themeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHANGETHEME\": {\n      return action.data;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const changeTheme = (value) => {\n  return {\n    type: \"CHANGETHEME\",\n    data: value,\n  };\n};\n\nexport default themeReducer;\n","const initialState = \"纳斯卡移民局\";\n\nconst titleReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHANGETITLE\": {\n      return action.data;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const changeTitle = (value) => {\n  return {\n    type: \"CHANGETITLE\",\n    data: value,\n  };\n};\n\nexport default titleReducer;\n","import { combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport historyReducer from \"../reducers/historyReducer\";\nimport linksReducer from \"../reducers/linksReducer\";\nimport shortAnswerReducer from \"../reducers/shortAnswerReducer\";\nimport singleChoiceReducer from \"../reducers/singleChoiceReducer\";\nimport subjectReducer from \"../reducers/subjectReducer\";\nimport themeReducer from \"../reducers/themeReducer\";\nimport titleReducer from \"../reducers/titleReducer\";\n\nconst reducer = combineReducers({\n  singlechoices: singleChoiceReducer,\n  shortanswers: shortAnswerReducer,\n  title: titleReducer,\n  links: linksReducer,\n  theme: themeReducer,\n  history: historyReducer,\n  subject: subjectReducer,\n});\n\nconst store = createStore(reducer, composeWithDevTools());\n\nexport default store;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { ThemeProvider, Button } from \"@material-ui/core\";\nimport { SnackbarProvider } from \"notistack\";\nimport { Provider, useSelector } from \"react-redux\";\n\nimport Home from \"./pages/Home\";\nimport Exam from \"./pages/Exam\";\nimport Quest from \"./pages/Quest\";\nimport AdminHome from \"./pages/admin/AdminHome\";\nimport store from \"./controllers/reducerCombiner\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n};\n\nconst Main = () => {\n  const theme = useSelector((state) => state.theme);\n  const notistackRef = React.createRef();\n  const onClickDismiss = (key) => () => {\n    notistackRef.current.closeSnackbar(key);\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <SnackbarProvider\n        maxSnack={4}\n        preventDuplicate\n        ref={notistackRef}\n        action={(key) => (\n          <Button onClick={onClickDismiss(key)} style={{ color: \"#FFF\" }}>\n            关闭\n          </Button>\n        )}\n      >\n        <Router>\n          <Switch>\n            <Route path=\"/admin/:route\">\n              <AdminHome />\n            </Route>\n            <Route path=\"/admin\">\n              <AdminHome />\n            </Route>\n            <Route path=\"/exam/:subject\">\n              <Quest />\n            </Route>\n            <Route path=\"/exam\">\n              <Exam />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(<App />, rootElement);\n} else {\n  ReactDOM.render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}